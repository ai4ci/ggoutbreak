---
title: "variant-proportions"
output: html_document
vignette: >
  %\VignetteIndexEntry{variant-proportions}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
here::i_am("vignettes/variant-proportions.Rmd")
source(here::here("vignettes/vignette-utils.R"))
library(tidyverse)
devtools::load_all()
ggplot2::theme_set(ggplot2::theme_minimal())
```

## Sanger lineage data

* The sanger centre / COGUK citation
* Sequencing background
* Pango lineage background citation
* WHO classification of lineages background

```{r}
# get and cache data
raw_lineages = .download("https://covid-surveillance-data.cog.sanger.ac.uk/download/lineages_by_ltla_and_week.tsv","lineages.tsv")
variants = readr::read_tsv(raw_lineages,na = c("Lineage data suppressed","Unassigned"))
lineages = .download("https://raw.githubusercontent.com/cov-lineages/pango-designation/master/pango_designation/alias_key.json", "lineage-keys.json")
lineage_keys = jsonlite::read_json(lineages)

# filter out recombinant species

lineage_keys = lineage_keys %>% magrittr::extract(lapply(.,length)==1)
lineage_key_df = tibble::tibble(prefix = names(lineage_keys), expanded = unlist(unname(lineage_keys)))

# replace e.g. AY with B.1.617.2
variants2 = variants %>% 
  dplyr::mutate(
    prefix = Lineage %>% stringr::str_extract("^[A-Z]+"),
    suffix = Lineage %>% stringr::str_sub(start = stringr::str_length(prefix)+1)
  ) %>% 
  dplyr::left_join(lineage_key_df, by="prefix") %>%
  dplyr::mutate(full_tree = dplyr::case_when(
    !is.null(expanded) & expanded != "" ~ paste0(expanded,suffix),
    TRUE ~ paste0(prefix,suffix)
  )) %>%
  dplyr::mutate(
    lineage_class = dplyr::case_when(
      is.na(Lineage) ~ "Unclassified",
      full_tree %>% stringr::str_starts("B.1.1.7") ~ "Alpha (B.1.1.7)",
      full_tree %>% stringr::str_starts("B.1.617.2.4") ~ "Delta (AY.4)",
      full_tree %>% stringr::str_starts("B.1.617.2") ~ "Delta (B.1.617.2)",
      full_tree %>% stringr::str_starts("B.1.1.529.1") ~ "Omicron (BA.1)",
      full_tree %>% stringr::str_starts("B.1.1.529.2") ~ "Omicron (BA.2)",
      full_tree %>% stringr::str_starts("B.1.1.529.4") ~ "Omicron (BA.4)",
      full_tree %>% stringr::str_starts("B.1.1.529.5") ~ "Omicron (BA.5)",
      # full_tree %>% stringr::str_starts("B.1.1.529") ~ "Omicron",
      TRUE ~ "Other"
    ),
    who_class = dplyr::case_when(
      is.na(Lineage) ~ "Unclassified",
      full_tree %>% stringr::str_starts("B.1.1.7") ~ "Alpha",
      full_tree %>% stringr::str_starts("B.1.617.2") ~ "Delta",
      full_tree %>% stringr::str_starts("B.1.1.529") ~ "Omicron",
      TRUE ~ "Other"
    )
  ) #%>% dplyr::select(-prefix,-suffix,-expanded)

```

* Prepare the data

```{r}  

# The count data is at LTLA level. Firstly lets aggregate to England (LTLAs) that
# start with "E"
variants_uk = variants2 %>% 
  dplyr::filter(stringr::str_starts(LTLA,"E")) %>% 
  dplyr::select(
    date = WeekEndDate,
    class = lineage_class,
    count = Count
  ) %>% 
  dplyr::group_by(date,class) %>% 
  dplyr::summarise(count = sum(count,na.rm = TRUE)) %>%
  dplyr::ungroup() %>%
  dplyr::mutate(place = "England")

variants_bristol = variants2 %>% 
  dplyr::filter(LTLA %in% c("E06000023","E06000025","E06000022","E06000024")) %>% 
  dplyr::select(
    date = WeekEndDate,
    class = lineage_class,
    count = Count
  ) %>% 
  dplyr::group_by(date,class) %>% 
  dplyr::summarise(count = sum(count,na.rm = TRUE)) %>%
  dplyr::ungroup() %>%
  dplyr::mutate(place = "Bristol")

variants_data = dplyr::bind_rows(
    variants_uk,
    variants_bristol
  ) %>% dplyr::group_by(place) %>% 
  as.timeseries(grp_label = "{place}")
```

* Calculate the probabilities in a group wise fashion

```{r}
# debug(estimate_multinomial_proportion)
# devtools::load_all()
probs = variants_data %>% estimate_multinomial_proportion()

```

* Plot the proportions:

```{r}
ggplot(probs, ggplot2::aes(x=date,y=probability,fill=class))+ggplot2::geom_area(color="black")+
  ggplot2::scale_x_date(date_breaks = "2 month",date_labels = "%b %y",name = NULL)+
  ggplot2::scale_fill_viridis_d()+
  ggplot2::facet_wrap(dplyr::vars(group), ncol=1)+
  ggplot2::theme(axis.text.x = ggplot2::element_text(angle=60,vjust = 1,hjust=1))
```


