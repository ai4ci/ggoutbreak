% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timeseries.R
\name{as.timed_df}
\alias{as.timed_df}
\alias{is.timed_df}
\title{Timed dataframes}
\usage{
as.timed_df(
  df,
  days_in_period = NULL,
  start_date = NULL,
  class_col = "class",
  grp_label = "Group {.grp_id}"
)

is.timed_df(df)
}
\arguments{
\item{df}{a dataframe containing either a time (as time_period, or numeric)
or a date (as a Date) column. This may be grouped in which case the grouping
defines individual timeseries, which are generally treated as independent.}

\item{days_in_period}{the number of days in one time unit. May be non
integer. If the time column in the dataframe is already a time_period then
this is optional, but if provided will recalibrate the time_period to a new
interval. Otherwise it is required}

\item{start_date}{the zero day. If the time column in the dataframe is
already a time_period then this is optional, but if provided will
recalibrate the time_period to a new interval. If the dataframe has a
date column then this is optional and the zero day is assumed to be the
start of the timeseries.}

\item{class_col}{the column name of a class column if present. Defaults to
"class" but will only be used if the column is present. The class column
may be a binomial or multinomial class marker.}

\item{grp_label}{a glue specification to apply to the groups of the \code{df}
dataframe to create a unique label for the groups.}
}
\value{
a dateframe with a time column (as a time_period) and date as a Date.
if originally grouped it will have a \code{group} column and if \code{class_col} was#
defined a \code{class} column. Other columns are preserved.
}
\description{
A timed dataframe is a dataframe with a time point (as a time_period vector)
associated with every entry. It will also have a date column (as a normal
Date object) once converted. This is a line list with a date not a time series.
}
\section{Functions}{
\itemize{
\item \code{is.timed_df()}: Check if this is a timed_df

}}
\examples{
library(tidyverse)
library(growthrates)

# a timed_df object:
tmp1 = tibble(
    time = floor(runif(100, 0, 20)),
    value = rnorm(100)
  ) \%>\%
  as.timed_df(days_in_period=7,start_date="2020-01-01")
# defaults to `count = n()`


tmp1 \%>\% time_summarise()


tmp1 \%>\% time_summarise(value = mean(value))
# the resulting timeseries are weekly as the inupt was weekly.

# class grouping example

tmp2 = tibble(
    mygroup = c(rep("g1",50),rep("g2",50),rep("g1",50),rep("g2",50)),
    myclass = c(rep("a",100),rep("b",100)),
    time = floor(runif(200, 0, 20)),
    value = rnorm(200)
  ) \%>\%
  group_by(mygroup) \%>\%
  as.timed_df(days_in_period=7,start_date="2020-01-01",class_col=myclass,grp_label = "{mygroup}")

tmp3 = tmp2 \%>\% time_summarise()
tmp3 \%>\% restore_groups()


tmp4 = tmp3 \%>\% time_decompose()
tmp4 \%>\% restore_groups()
}
