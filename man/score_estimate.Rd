% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score-estimates.R
\name{score_estimate}
\alias{score_estimate}
\title{Calculate scoring statistics from predictions.}
\usage{
score_estimate(
  est,
  obs,
  lags = NULL,
  summarise_by = est \%>\% dplyr::groups(),
  raw_bootstraps = FALSE
)
}
\arguments{
\item{est}{a dataframe of estimates of incidence, growth rate of reproduction
number based off a simulation or data with known parameters. Each group in
\code{est} is expected to contain multiple estimates and each group is scored
separately. Estimates in \code{est} must be in the form of a column named
\code{XXX.cdf} containing a cumulative distribution function for the estimate
and \code{XXX.link} containing a link function specification (one if
\code{identity},\code{log} or \code{logit}). These are not generated by default by the
\code{ggoutbreak} estimators but are triggered by setting the option:
\code{options("ggoutbreak.keep_cdf"=TRUE)} before running the estimator. The
CDFs generated will be analytical, if the estimator generates a
parametrised output (or a mixture thereof), empirical if the estimator uses
resampling, or inferred if the estimator produces quantiles only.}

\item{obs}{a dataframe of the ground truth, sharing the same grouping and
columns as \code{est} with at least one column(s) named \code{XXX.obs} with \code{XXX}
being e.g. \code{rt},\code{growth} or \code{incidence} or any other column group
predicted in \code{est} (i.e. if \code{obs} has a column \code{XXX.obs}, \code{est} must have
one called \code{XXX.cdf}).}

\item{lags}{a data frame of estimate types and lags as output by
\code{\link[=quantify_lag]{quantify_lag()}} if multiple models are included then the columns must
match those in \code{obs}.}

\item{summarise_by}{by default every group is treated separately. This can be
overridden with a \code{tidyselect} specification of the groupings we want to
see in the final summarised output (e.g. if we want to differentiate
performance on a particular type of scenario or timeframe). If this is
exactly \code{FALSE} the function will return all the raw point estimates.}

\item{raw_bootstraps}{(defaults to FALSE) return the summary metrics for
each bootstrap rather than the quantiles of the summary metrics.}
}
\value{
a dataframe of scoring metrics, with one row per group. This includes
the following columns:
\itemize{
\item mean_quantile_bias - the average of the universal residuals. Lower values
are better.
\item mean_trans_bias - the bias on the link function scale.
\item link - the link function
\item mean_bias - the bias on the natural scale (which may be interpreted as
additive or multiplicative depending on the link)
\item pit_was - an unadjusted probability integral transform histogram
Wasserstein distance from the uniform (lower values are better).
\item unbiased_pit_was - an PIT Wasserstein distance from the uniform, adjusted
for estimator bias (lower values are better).
\item directed_pit_was - a PIT Wasserstein distance from the uniform, directed
away from the centre, adjusted for estimator bias (values closer to zero
are better, positive values indicate overconfidence, and negative values
excessively conservative estimates).
\item percent_iqr_coverage - the percentage of estimators that include the true
value in their IQR. For a perfectly calibrated estimate this should be 0.5.
Lower values reflect overconfidence, higher values reflect excessively
conservative estimates.
\item unbiased_percent_iqr_coverage - the percentage of estimators that include
the true value in their IQR once adjusted for bias
\item mean_crps - the mean value of the continuous rank probability score for
each point estimate (lower values are better)
\item mean_unbiased_crps - the mean value of the continuous rank probability
score for each point estimate assessed after adjustment for bias (lower
values are better)
}

other outputs are possible if \code{summarise_by} is false.
}
\description{
This performs a range of continuous scoring metrics for each estimate
time-point using cumulative distribution functions for each estimate. Point
quality metrics are calculated for each estimate provided and summarised.
Summarisation is performed using bootstrap resampling to generate confidence
intervals for summary statistics, which are presented as median +/1 95\% CI.
}
\examples{
data = test_poisson_rt_smooth

pipeline = ~ .x \%>\% poisson_locfit_model() \%>\% rt_from_incidence(ip = .y)
lags = quantify_lag(pipeline, ip = test_ip)

withr::with_options(list("ggoutbreak.keep_cdf"=TRUE),{
   est = data \%>\% poisson_locfit_model() \%>\% rt_from_incidence()
})

if (interactive()) plot_rt(est)+sim_geom_function(data, colour="red")

obs = data \%>\% dplyr::mutate(rt.obs = rt, incidence.obs = rate)
score_estimate(est,obs,lags) \%>\% dplyr::glimpse()

}
\concept{test}
