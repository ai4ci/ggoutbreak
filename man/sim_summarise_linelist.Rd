% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation-utils.R
\name{sim_summarise_linelist}
\alias{sim_summarise_linelist}
\title{Summarise a line list}
\usage{
sim_summarise_linelist(
  df = i_sim_linelist,
  ...,
  censoring = list(admitted = function(t) rgamma2(t, mean = 5), death = function(t)
    rgamma2(t, mean = 10), sample = function(t, result_delay) result_delay),
  max_time = max(df$time)
)
}
\arguments{
\item{df}{a line list dataframe arising from e.g. \code{\link[=sim_branching_process]{sim_branching_process()}} - a dataframe with columns:
\itemize{
\item id (unique_id) - Patient level unique id
\item time (ggoutbreak::time_period) - Time of infection. A `time_period`
}

Any grouping allowed.
}

\item{...}{the grouping to include in the summarisation.}

\item{censoring}{a named list of column names (without the \verb{_time} suffix) of
the kind created by \code{\link[=sim_delay]{sim_delay()}} or \code{\link[=sim_apply_delay]{sim_apply_delay()}}, and an associated function defining the
delay of reporting that the column experiences. For this
function \code{t} (or \code{.x} for a purrr lambda) will refer to the \code{XX_time}
column, i.e. whenever the event that is being reported happened and \code{time}
the simulation infection time. N.B. since infection is not observed you
can't censor it.}

\item{max_time}{the censoring time for this observation. If this is a vector
there will be multiple time series in the output}
}
\value{
a count data frame with additional statistics.

A dataframe containing the following columns: 
\itemize{
\item statistic (character) - An identifier for the statistic, whether that be infections, admissions, deaths
\item count (positive_integer) - Positive case counts associated with the specified time frame
\item time (ggoutbreak::time_period + group_unique) - A (usually complete) set of singular observations per unit time as a `time_period`
}

Minimally grouped by: statistic (and other groupings may be present).
}
\description{
This function converts a line list into a daily count of incident cases, plus
infections, admissions, deaths, test samples, test results if present.
Censoring of these counts can also be defined. Whilst summarising various
network measures such as the forward looking case reproduction number are
also calculated.
}
\examples{

sim = sim_branching_process(
  changes = dplyr::tibble(t = c(0,40), R = c(1.7,0.8)),
  max_time = 120,
  seed = 100,
  fn_imports = ~ ifelse(.x==0,100,0)
)

tmp = sim \%>\% sim_summarise_linelist()

p1 = plot_counts(tmp)

p2 = ggplot2::ggplot(tmp, ggplot2::aes(x=as.Date(time)))+
  ggplot2::geom_point(ggplot2::aes(y=rt.case,colour="case"))+
  ggplot2::geom_point(ggplot2::aes(y=rt.inst,colour="instantaneous"))+
  ggplot2::geom_line(ggplot2::aes(y=rt.weighted))+
  ggplot2::coord_cartesian(ylim=c(0,3.5))+
  ggplot2::xlab(NULL)

patchwork::wrap_plots(p1,p2,ncol=1,axes="collect")

}
\concept{test}
