% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timeseries.R
\name{as.time_period}
\alias{as.time_period}
\alias{is.time_period}
\title{Convert numbers to a time period class}
\usage{
as.time_period(times, days_in_period = NULL, start_date = NULL)

is.time_period(times)
}
\arguments{
\item{times}{a vector of numbers (may be integer or real) or a time_period}

\item{days_in_period}{the number of days in one unit of time. If times is a
time_period, and the number of days is different then this will recalibrate
the time_period to use the new days in period}

\item{start_date}{the zero time date. If the input is already a time_period and
this is different to its start_date then it will be recalibrated.}
}
\value{
a \code{time_period} class
}
\description{
Time periods are just a zero based numeric representation of dates
with a time unit baked in. This allows days or weeks, or fractional days
to be represented
}
\section{Functions}{
\itemize{
\item \code{is.time_period()}: Check is a time_period

}}
\examples{
# 100 weeks from 2020-01-01

tmp = as.time_period(0:100, 7, "2020-01-01")
as.Date(tmp)

tmp2 = as.integer(as.Date(tmp))
# testthat::expect_true(all(na.omit(tmp2-lag(tmp2)) == 7))

tmp2 = as.time_period(0:23, 1/24, "2020-01-01")
as.POSIXct(tmp2)

# convert timeseries to new "unit"
tmp = as.time_period(0:100, 7, "2020-01-01")
tmp2 = as.time_period(tmp,1)
testthat::expect_equal(as.numeric(tmp2), 0:100*7)
}
