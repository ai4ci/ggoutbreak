% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimator-gam.R
\name{poisson_gam_model}
\alias{poisson_gam_model}
\title{GAM poisson time-series model}
\usage{
poisson_gam_model(
  d,
  ...,
  frequency = "1 day",
  ip = i_discrete_ip,
  quick = FALSE,
  .progress = interactive()
)
}
\arguments{
\item{d}{input data - EITHER: a dataframe with columns:
\itemize{
\item count (positive_integer) - Positive case counts associated with the specified time frame
\item time (ggoutbreak::time_period + group_unique) - A (usually complete) set of singular observations per unit time as a `time_period`
\item obs_time (ggoutbreak::time_period) - The time of the observation of the time series, as a `time_period`
}

Minimally grouped by: obs_time (and other groupings allowed).

OR with columns:
\itemize{
\item count (positive_integer) - Positive case counts associated with the specified time frame
\item time (ggoutbreak::time_period + group_unique) - A (usually complete) set of singular observations per unit time as a `time_period`
}

Any grouping allowed.

}

\item{...}{
  Named arguments passed on to \code{\link[=poisson_gam_model.censored]{poisson_gam_model.censored}}\describe{
    \item{\code{model_fn}}{a function that takes data relating to one time series
(e.g. the input data \code{d} on a group by group basis) and returns a fitted
GAM. The default is creates a delayed reporting model \code{\link[=gam_delayed_reporting]{gam_delayed_reporting()}}.}
\item{\code{predict}}{if the GAM model in \code{model_fn} introduces other variables we
need to know what their values should be fixed at for prediction.
This is a named list of defaults for variables in the model supplied by
\code{model_fn}. These defaults will be used in prediction. This
may be supplied as part of the model function generator (
e.g. \code{gam_delayed_reporting(...)$predict}). If this is set to exactly \code{FALSE}
no prediction is performed and a list column of fitted GAM models returned
instead.}
}
  Named arguments passed on to \code{\link[=poisson_gam_model.incidence]{poisson_gam_model.incidence}}\describe{
    \item{\code{model_fn}}{a function that takes data relating to one time series
(e.g. the input data \code{d} on a group by group basis) and returns a fitted
GAM. The default creates a simple poisson model based on count alone (\code{\link[=gam_poisson_model_fn]{gam_poisson_model_fn()}}).}
\item{\code{predict}}{if the GAM model in \code{model_fn} introduces other variables we
need to know what their values should be fixed at for prediction.
This is a named list of defaults for variables in the model supplied by
\code{model_fn}. These defaults will be used in prediction. This
may be supplied as part of the model function generator (
e.g. \code{gam_delayed_reporting(...)$predict}). If this is set to exactly \code{FALSE}
no prediction is performed and a list column of fitted GAM models returned
instead.}
}}

\item{frequency}{the density of the output estimates as a time period such as
\verb{7 days} or \verb{2 weeks}.}

\item{ip}{An infectivity profile (optional) if not given (the default) the
Rt value will not be estimated - a dataframe with columns:
\itemize{
\item boot (anything + default(1)) - a bootstrap identifier
\item probability (proportion) - the probability of new event during this period.
\item tau (integer + complete) - the days since the index event.
}

Minimally grouped by: boot (and other groupings allowed).

A default value is defined.
}

\item{quick}{if \code{ip} is provided, and quick is \code{TRUE} Rt estimation will be
done assuming independence which is quicker but less accurate. Setting this
to false will use a full variance-covariance matrix.}

\item{.progress}{show a CLI progress bar}
}
\value{
A dataframe containing the following columns:
\itemize{
\item time (ggoutbreak::time_period + group_unique) - A (usually complete) set of singular observations per unit time as a \code{time_period}
\item incidence.fit (double) - an estimate of the incidence rate on a log scale
\item incidence.se.fit (positive_double) - the standard error of the incidence rate estimate on a log scale
\item incidence.0.025 (positive_double) - lower confidence limit of the incidence rate (true scale)
\item incidence.0.5 (positive_double) - median estimate of the incidence rate (true scale)
\item incidence.0.975 (positive_double) - upper confidence limit of the incidence rate (true scale)
\item growth.fit (double) - an estimate of the growth rate
\item growth.se.fit (positive_double) - the standard error the growth rate
\item growth.0.025 (double) - lower confidence limit of the growth rate
\item growth.0.5 (double) - median estimate of the growth rate
\item growth.0.975 (double) - upper confidence limit of the growth rate
}

Any grouping allowed.

additionally if \code{ip} is given: A dataframe containing the following columns:
\itemize{
\item time (ggoutbreak::time_period + group_unique) - A (usually complete) set of singular observations per unit time as a \code{time_period}
\item rt.fit (double) - an estimate of the reproduction number
\item rt.se.fit (positive_double) - the standard error of the reproduction number
\item rt.0.025 (double) - lower confidence limit of the reproduction number
\item rt.0.5 (double) - median estimate of the reproduction number
\item rt.0.975 (double) - upper confidence limit of the reproduction number
}

Any grouping allowed.
}
\description{
This function lets the user supply a fitting function that models incidence,
and provides a set of machinery for applying it to groups, extracting
incidence, growth rates, and optionally reproduction numbers from the fit(s).
This is more advanced than other estimators as there are far more
configuration of GAM models, so this aims to provide sensible defaults with
the option to bring your own model.
}
\examples{

# Simple poisson model
data = test_poisson_rt_smooth
tmp2 = poisson_gam_model(data,window=7,ip=test_ip,quick=TRUE)

if (interactive()) {
  plot_incidence(
    tmp2,
    date_labels="\%b \%y",
    raw=data
  )

  plot_rt(
    tmp2,
    date_labels="\%b \%y"
  )+
  sim_geom_function(data,colour="red")
}



# example with delayed observation model.
# This data is all the day by day observations of the whole timeseries from
# the beginning of the outbreak.
data2 = test_delayed_observation
model = gam_delayed_reporting(window = 14)
tmp3 = data2 \%>\% poisson_gam_model(
  model_fn = model$model_fn,
  predict = model$predict,
  ip=test_ip)

if (interactive()) {
  plot_incidence(tmp3)+
    ggplot2::geom_line(
      data=data2 \%>\% dplyr::filter(obs_time \%\% 10 == 0),
      mapping = ggplot2::aes(x=as.Date(time),y=count,colour=as.factor(obs_time))
      )

  plot_rt(tmp3)
}
}
\concept{models}
