% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-growth-phase.R
\name{plot_growth_phase}
\alias{plot_growth_phase}
\title{Plot an incidence or proportion versus growth phase diagram}
\usage{
plot_growth_phase(
  modelled = i_timestamped,
  timepoints = NULL,
  duration = max(dplyr::count(modelled)$n),
  interval = 7,
  mapping = if (interfacer::is_col_present(modelled, class)) ggplot2::aes(colour = class)
    else ggplot2::aes(),
  cis = TRUE,
  ...
)
}
\arguments{
\item{modelled}{Either:

A dataframe containing the following columns:
\itemize{
\item time (ggoutbreak::time_period + group_unique) - A (usually complete) set of singular observations per unit time as a \code{time_period}
\item incidence.fit (double) - an estimate of the incidence rate on a log scale
\item incidence.se.fit (positive_double) - the standard error of the incidence rate estimate on a log scale
\item incidence.0.025 (positive_double) - lower confidence limit of the incidence rate (true scale)
\item incidence.0.5 (positive_double) - median estimate of the incidence rate (true scale)
\item incidence.0.975 (positive_double) - upper confidence limit of the incidence rate (true scale)
\item growth.fit (double) - an estimate of the growth rate
\item growth.se.fit (positive_double) - the standard error the growth rate
\item growth.0.025 (double) - lower confidence limit of the growth rate
\item growth.0.5 (double) - median estimate of the growth rate
\item growth.0.975 (double) - upper confidence limit of the growth rate
}

Any grouping allowed.

OR:

A dataframe containing the following columns:
\itemize{
\item time (ggoutbreak::time_period + group_unique) - A (usually complete) set of singular observations per unit time as a \code{time_period}
\item proportion.fit (double) - an estimate of the proportion on a logit scale
\item proportion.se.fit (positive_double) - the standard error of proportion estimate on a logit scale
\item proportion.0.025 (proportion) - lower confidence limit of proportion (true scale)
\item proportion.0.5 (proportion) - median estimate of proportion (true scale)
\item proportion.0.975 (proportion) - upper confidence limit of proportion (true scale)
\item relative.growth.fit (double) - an estimate of the relative growth rate
\item relative.growth.se.fit (positive_double) - the standard error the relative growth rate
\item relative.growth.0.025 (double) - lower confidence limit of the relative growth rate
\item relative.growth.0.5 (double) - median estimate of the relative growth rate
\item relative.growth.0.975 (double) - upper confidence limit of the relative growth rate
}

Any grouping allowed.}

\item{timepoints}{time points (as \code{Date} or \code{time_period} vector) of dates to
plot phase diagrams. If multiple this will result in a sequence of plots
as facets. If \code{NULL} (the default) it will be the last time point in the series}

\item{duration}{the length of the growth rate phase trail}

\item{interval}{the length of time between markers on the phase plot}

\item{mapping}{a \code{ggplot2::aes()} mapping}

\item{cis}{logical; should the phases be marked with confidence intervals?}

\item{...}{
  Named arguments passed on to \code{\link[=geom_events]{geom_events}}\describe{
    \item{\code{events}}{Significant events or time spans

A dataframe containing the following columns: 
\itemize{
\item label (character) - the event label
\item start (date) - the start date, or the date of the event
\item end (date) - the end date or NA if a single event
}

Any grouping allowed.

A default value is defined.}
\item{\code{event_label_size}}{how big to make the event label}
\item{\code{event_label_colour}}{the event label colour}
\item{\code{event_label_angle}}{the event label colour}
\item{\code{event_line_colour}}{the event line colour}
\item{\code{event_fill_colour}}{the event area fill}
\item{\code{hide_labels}}{do not show labels at all}
\item{\code{guide_axis}}{a guide axis configuration for the labels
(see \code{ggplot2::guide_axis} and \code{ggplot2::dup_axis}). This can be used to
specify a position amongst other things.}
\item{\code{...}}{
  Named arguments passed on to \code{\link[ggplot2:scale_date]{ggplot2::scale_x_date}}\describe{
    \item{\code{name}}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}
\item{\code{breaks}}{One of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the breaks specified by \code{date_breaks}
\item A \code{Date}/\code{POSIXct} vector giving positions of breaks
\item A function that takes the limits as input and returns breaks as output
}}
\item{\code{date_breaks}}{A string giving the distance between breaks like "2
weeks", or "10 years". If both \code{breaks} and \code{date_breaks} are
specified, \code{date_breaks} wins. Valid specifications are 'sec', 'min',
'hour', 'day', 'week', 'month' or 'year', optionally followed by 's'.}
\item{\code{labels}}{One of:
\itemize{
\item \code{NULL} for no labels
\item \code{waiver()} for the default labels computed by the
transformation object
\item A character vector giving labels (must be same length as \code{breaks})
\item An expression vector (must be the same length as breaks). See ?plotmath for details.
\item A function that takes the breaks as input and returns labels
as output. Also accepts rlang \link[rlang:as_function]{lambda} function
notation.
}}
\item{\code{date_labels}}{A string giving the formatting specification for the
labels. Codes are defined in \code{\link[=strftime]{strftime()}}. If both \code{labels}
and \code{date_labels} are specified, \code{date_labels} wins.}
\item{\code{minor_breaks}}{One of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the breaks specified by \code{date_minor_breaks}
\item A \code{Date}/\code{POSIXct} vector giving positions of minor breaks
\item A function that takes the limits as input and returns minor breaks as
output
}}
\item{\code{date_minor_breaks}}{A string giving the distance between minor breaks
like "2 weeks", or "10 years". If both \code{minor_breaks} and
\code{date_minor_breaks} are specified, \code{date_minor_breaks} wins. Valid
specifications are 'sec', 'min', 'hour', 'day', 'week', 'month' or 'year',
optionally followed by 's'.}
\item{\code{limits}}{One of:
\itemize{
\item \code{NULL} to use the default scale range
\item A numeric vector of length two providing limits of the scale.
Use \code{NA} to refer to the existing minimum or maximum
\item A function that accepts the existing (automatic) limits and returns
new limits. Also accepts rlang \link[rlang:as_function]{lambda} function
notation.
Note that setting limits on positional scales will \strong{remove} data outside of the limits.
If the purpose is to zoom, use the limit argument in the coordinate system
(see \code{\link[ggplot2:coord_cartesian]{coord_cartesian()}}).
}}
\item{\code{expand}}{For position scales, a vector of range expansion constants used to add some
padding around the data to ensure that they are placed some distance
away from the axes. Use the convenience function \code{\link[ggplot2:expansion]{expansion()}}
to generate the values for the \code{expand} argument. The defaults are to
expand the scale by 5\% on each side for continuous variables, and by
0.6 units on each side for discrete variables.}
\item{\code{oob}}{One of:
\itemize{
\item Function that handles limits outside of the scale limits
(out of bounds). Also accepts rlang \link[rlang:as_function]{lambda}
function notation.
\item The default (\code{\link[scales:oob]{scales::censor()}}) replaces out of
bounds values with \code{NA}.
\item \code{\link[scales:oob]{scales::squish()}} for squishing out of bounds values into range.
\item \code{\link[scales:oob]{scales::squish_infinite()}} for squishing infinite values into range.
}}
\item{\code{guide}}{A function used to create a guide or its name. See
\code{\link[ggplot2:guides]{guides()}} for more information.}
\item{\code{position}}{For position scales, The position of the axis.
\code{left} or \code{right} for y axes, \code{top} or \code{bottom} for x axes.}
\item{\code{sec.axis}}{\code{\link[ggplot2:sec_axis]{sec_axis()}} is used to specify a secondary axis.}
\item{\code{timezone}}{The timezone to use for display on the axes. The default
(\code{NULL}) uses the timezone encoded in the data.}
\item{\code{na.value}}{Missing values will be replaced with this value.}
}}
}
  Named arguments passed on to \code{\link[ggplot2:facet_wrap]{ggplot2::facet_wrap}}\describe{
    \item{\code{facets}}{A set of variables or expressions quoted by \code{\link[ggplot2:vars]{vars()}}
and defining faceting groups on the rows or columns dimension.
The variables can be named (the names are passed to \code{labeller}).

For compatibility with the classic interface, can also be a
formula or character vector. Use either a one sided formula, \code{~a + b},
or a character vector, \code{c("a", "b")}.}
\item{\code{nrow,ncol}}{Number of rows and columns.}
\item{\code{scales}}{Should scales be fixed (\code{"fixed"}, the default),
free (\code{"free"}), or free in one dimension (\code{"free_x"},
\code{"free_y"})?}
\item{\code{shrink}}{If \code{TRUE}, will shrink scales to fit output of
statistics, not raw data. If \code{FALSE}, will be range of raw data
before statistical summary.}
\item{\code{labeller}}{A function that takes one data frame of labels and
returns a list or data frame of character vectors. Each input
column corresponds to one factor. Thus there will be more than
one with \code{vars(cyl, am)}. Each output
column gets displayed as one separate line in the strip
label. This function should inherit from the "labeller" S3 class
for compatibility with \code{\link[ggplot2:labeller]{labeller()}}. You can use different labeling
functions for different kind of labels, for example use \code{\link[ggplot2:label_parsed]{label_parsed()}} for
formatting facet labels. \code{\link[ggplot2:label_value]{label_value()}} is used by default,
check it for more details and pointers to other options.}
\item{\code{as.table}}{If \code{TRUE}, the default, the facets are laid out like
a table with highest values at the bottom-right. If \code{FALSE}, the
facets are laid out like a plot with the highest value at the top-right.}
\item{\code{switch}}{By default, the labels are displayed on the top and
right of the plot. If \code{"x"}, the top labels will be
displayed to the bottom. If \code{"y"}, the right-hand side
labels will be displayed to the left. Can also be set to
\code{"both"}.}
\item{\code{drop}}{If \code{TRUE}, the default, all factor levels not used in the
data will automatically be dropped. If \code{FALSE}, all factor levels
will be shown, regardless of whether or not they appear in the data.}
\item{\code{dir}}{Direction: either \code{"h"} for horizontal, the default, or \code{"v"},
for vertical.}
\item{\code{strip.position}}{By default, the labels are displayed on the top of
the plot. Using \code{strip.position} it is possible to place the labels on
either of the four sides by setting \code{strip.position = c("top",
  "bottom", "left", "right")}}
\item{\code{axes}}{Determines which axes will be drawn in case of fixed scales.
When \code{"margins"} (default), axes will be drawn at the exterior margins.
\code{"all_x"} and \code{"all_y"} will draw the respective axes at the interior
panels too, whereas \code{"all"} will draw all axes at all panels.}
\item{\code{axis.labels}}{Determines whether to draw labels for interior axes when
the scale is fixed and the \code{axis} argument is not \code{"margins"}. When
\code{"all"} (default), all interior axes get labels. When \code{"margins"}, only
the exterior axes get labels, and the interior axes get none. When
\code{"all_x"} or \code{"all_y"}, only draws the labels at the interior axes in the
x- or y-direction respectively.}
}}
}
\value{
a ggplot
}
\description{
Plot an incidence or proportion versus growth phase diagram
}
\examples{

tmp = ggoutbreak::england_covid \%>\%
  time_aggregate(count=sum(count))

tmp_pop = ggoutbreak::england_demographics \%>\%
  dplyr::ungroup() \%>\%
  dplyr::summarise(population = sum(population))

# If the incidence is normalised by population
tmp2 = tmp \%>\%
  poisson_locfit_model() \%>\%
  normalise_incidence(tmp_pop)

timepoints = as.Date(c("Lockdown 1" = "2020-03-30", "Lockdown 2" = "2020-12-31"))

if(interactive()) {
  plot_growth_phase(tmp2, timepoints, duration=108)
}
}
\concept{vis}
