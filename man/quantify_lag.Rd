% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score-estimates.R
\name{quantify_lag}
\alias{quantify_lag}
\title{Identify estimate lags in a model}
\usage{
quantify_lag(pipeline, ip = i_empirical_ip, lags = -10:30)
}
\arguments{
\item{pipeline}{a function taking an input dataset and an infectivity profile as
inputs and producing an estimate as output. This is the whole parametrised
pipeline including any other inputs. This can be a \code{purrr} style function.}

\item{ip}{the infectivity profile.

A dataframe containing the following columns: 
\itemize{
\item boot (anything + default(1)) - a bootstrap identifier
\item probability (proportion) - the probability of new event during this period.
\item a0 (double) - the beginning of the time period (in days)
\item a1 (double) - the end of the time period (in days)
}

Must be grouped by: boot (exactly).

A default value is defined.}

\item{lags}{a vector with the delays to test. Defaults to -10 to +30 days}
}
\value{
a lag analysis dataframe containing the \code{estimate} type and the \code{lag}
in days that the estimate is behind the actual observation
}
\description{
A specific parameter or set of parameters can be estimated by a \code{pipeline}.
This function applies the \code{pipeline} to a synthetic epidemic with sawtooth
incidence resulting from a stepped growth rate function. The lag between
synthetic input and estimate is assessed by minimising the root mean square
error of input and estimated based on different lag offsets.
}
\examples{
pipeline = ~ .x \%>\% poisson_locfit_model() \%>\% rt_from_incidence(ip = .y)
lag_analysis = quantify_lag(pipeline)

quantify_lag(~ rt_epiestim(.x,ip = .y))

}
\concept{test}
