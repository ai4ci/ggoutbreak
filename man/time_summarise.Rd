% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timeseries.R
\name{time_summarise}
\alias{time_summarise}
\title{Summarise data from a \code{timed_df} to a \code{timeseries}}
\usage{
time_summarise(timed_df, ..., .fill = list())
}
\arguments{
\item{timed_df}{a line list of data you want to summarise by the time column.
If this is grouped the grouping is preserved and converted into a \code{class}
column in the output. Ff the timed_df has a \code{class} column that is used in
preference.}

\item{...}{a spec for a dplyr::summary(...) - optional, and if not provided a
\code{count = dplyr::n()} or a \code{count = sum(count)} is performed.}

\item{.fill}{a list similar to tidyr::complete for values to fill
variables with}
}
\value{
a timeseries dataframe, by time
}
\description{
Summarise data from a \code{timed_df} to a \code{timeseries}
}
\examples{
library(tidyverse)
library(growthrates)

# a timed_df object:
tmp1 = tibble(
    time = floor(runif(100, 0, 20)),
    value = rnorm(100)
  ) \%>\%
  as.timed_df(days_in_period=7,start_date="2020-01-01")
# defaults to `count = n()`


tmp1 \%>\% time_summarise()


tmp1 \%>\% time_summarise(value = mean(value))
# the resulting timeseries are weekly as the inupt was weekly.

# class grouping example

tmp2 = tibble(
    mygroup = c(rep("g1",50),rep("g2",50),rep("g1",50),rep("g2",50)),
    myclass = c(rep("a",100),rep("b",100)),
    time = floor(runif(200, 0, 20)),
    value = rnorm(200)
  ) \%>\%
  group_by(mygroup) \%>\%
  as.timed_df(days_in_period=7,start_date="2020-01-01",class_col=myclass,grp_label = "{mygroup}")

tmp3 = tmp2 \%>\% time_summarise()
tmp3 \%>\% restore_groups()


tmp4 = tmp3 \%>\% time_decompose()
tmp4 \%>\% restore_groups()
}
